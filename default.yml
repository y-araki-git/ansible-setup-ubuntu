---
- hosts: samplehost
  user: da-dev
  sudo: yes
  tasks:
#  - name: set timezone to Asia/Tokyo
#    copy: content='Asia/Tokyo'
#          dest=/etc/timezone
#          owner=root
#          group=root
#          mode=0744
#          backup=yes
#   notify: update timezone
  - name: timezone to Asia/Tokyo
    timezone:
      name: Asia/Tokyo
  - name: create user da-ope
    user: name=da-ope state=present shell=/bin/bash
  - name: create .ssh
    file:
      path: /home/da-ope/.ssh/
      group: da-ope
      owner: da-ope
      mode: 0700
      state: directory
  - name: check da-ope authorized_keys
    stat: 
      path: /home/da-ope/.ssh/authorized_keys
    register: keys
  - name: create authorized_keys
    file:
      path: /home/da-ope/.ssh/authorized_keys
      group: da-ope
      owner: root
      mode: 0640
      state: touch
    when: not keys.stat.exists
  - name: sudoers modify
    lineinfile: 
      path: /etc/sudoers
      state: present
      regexp: "{{ item.match }}"
      line: "{{ item.line }}"
    with_items:
      - { match: 'ALLOWCMND', line: 'Cmnd_Alias ALLOWCMND = /bin/cat, /usr/bin/tail, /usr/bin/head, /usr/sbin/service, /usr/bin/view' }
      - { match: 'da-ope', line: 'da-ope ALL=NOPASSWD: ALLOWCMND' }
  - name: download snoopy
    get_url:
      url=https://github.com/a2o/snoopy/raw/install/doc/install/bin/snoopy-install.sh
      dest=/tmp/snoopy-install.sh
      mode=0755
  - name: install snoopy requirements pkg
    apt: pkg={{ item }} update_cache=yes cache_valid_time=3600
    with_items:
      - gcc
      - gzip
      - make
      - socat
      - tar
      - wget
      - screen
      - libssl-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - openssl
      - zip
      - unzip
  - name: check snoopy bin
    stat:
      path: /usr/local/sbin/snoopy-enable
    register: snoopyfile
  - name: install snoopy
    shell: if [ ! -f /usr/local/sbin/snoopy-enable ];then /tmp/snoopy-install.sh stable ; fi
    when: not snoopyfile.stat.exists
  - name: setting snoopy.ini01
    ini_file:
     dest: /etc/snoopy.ini
     section: snoopy
     option: output
     value: devlog
  - name: setting snoopy.ini02
    ini_file:
     dest: /etc/snoopy.ini
     section: snoopy
     option: syslog_facility
     value: LOCAL5
  - name: setting snoopy logrotate
    blockinfile:
      dest: /etc/logrotate.d/snoopy
      create: yes
      block: |
        /var/log/snoopy.log {
            missingok
            rotate 31
            daily
            dateext
            olddir /var/log/backup/
        }
  - name: setting snoopy rsyslog
    blockinfile:
       dest: /etc/rsyslog.d/50-default.conf
       backup: yes
       state: present
       insertafter: '^#user.*'
       block: |
          local5.*			-/var/log/snoopy.log
    notify: restart rsyslog
  - name: setting snoopy rsyslog2
    replace:
        path: /etc/rsyslog.d/50-default.conf
        backup: yes
        regexp: '^\*.\*;auth'
        replace: '*.*;local5.none;auth'
  - name: create data directory
    file:
      path: /data/
      group: root
      owner: root
      mode: 0777
      state: directory
  - name: copy logrotate
    copy:
      src: /data/ansible/template/logrotate/rsyslog
      dest: /etc/logrotate.d/rsyslog
      force: yes
  - name: disable autoupgrade
    shell: sed -i 's/"1"/"0"/g' /etc/apt/apt.conf.d/20auto-upgrades
  handlers:
   - name: restart rsyslog
     service: name=rsyslog state=restarted
   - name: update timezone
     command: dpkg-reconfigure --frontend noninteractive tzdata

